<mvc:View
	controllerName="Quickstart.App"
	displayBlock="true"
	xmlns="sap.m"
    xmlns:l="sap.ui.layout"
	xmlns:core="sap.ui.core"
	xmlns:tnt="sap.tnt"
	xmlns:mvc="sap.ui.core.mvc">
	<App id="app"> 
	<!-- assign an ID so that the controller can easily identify it. -->
		<Page title="My App">
			<Button 
				icon="sap-icon://sap-ui5"
				text="Go!"
				press=".onPress"
				type="Emphasized"
				class="sapUiSmallMargin"
				/>
		</Page>

		<Page id="intro" title="Create Enterprise-Ready Web Apps with Ease">
			<l:BlockLayout background="Light">
				<l:BlockLayoutRow>
					<l:BlockLayoutCell>
						<core:Icon color="#1873B4" src="sap-icon://sap-ui5" size="20rem" class="sapUiMediumMarginBottom" width="100%"/>
						<Title level="H1" titleStyle="H1" text="This is UI5!" width="100%" textAlign="Center"/>
					</l:BlockLayoutCell>
				</l:BlockLayoutRow>

				<l:BlockLayoutRow>
					<l:BlockLayoutCell>
						<FlexBox items="{/features}" justifyContent="Center" wrap="Wrap" class="sapUiSmallMarginBottom">
							<tnt:InfoLabel text="{}" class="sapUiSmallMarginTop sapUiSmallMarginEnd"/>
							<!-- The InfoLabel tag from our view is a template that is repeated as many times as we have entries in our model. -->
						</FlexBox>
					</l:BlockLayoutCell>
				</l:BlockLayoutRow>

            	<l:BlockLayoutRow>
					<l:BlockLayoutCell>
						<Panel headerText="Are you ready?" expandable="true">
							<Switch change=".onChange" customTextOn="yes" customTextOff="no"/>
							<l:HorizontalLayout id="ready" visible="false" class="sapUiSmallMargin">
								<Text text="Ok, let's get you started!" class="sapUiTinyMarginEnd"/>
								<Link text="Learn more" href="https://openui5.hana.ondemand.com/"/>
							</l:HorizontalLayout>
						</Panel>
					</l:BlockLayoutCell>
				</l:BlockLayoutRow>

			</l:BlockLayout>
			
		</Page>
		<Button
                icon="sap-icon://sap-ui5"
				text="Steady...Go!"
				press=".onPress"
				type="Emphasized"
				class="sapUiSmallMargin"/>
	</App>
</mvc:View>

<!-- outsource the controller logic to an app controller. 
The .onPress event now references a function in the controller -->

<!-- The new controls in the view are an App and a Page. They define a Web app with a header bar and a title.
The button from the previous examples now also defines a type and a class attribute. 
This improves the layout of our button and makes it stand out more. -->
