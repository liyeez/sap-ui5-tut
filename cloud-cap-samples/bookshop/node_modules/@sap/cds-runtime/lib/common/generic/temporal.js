const cds = require('../../cds')
const LOG = cds.log('app')

// REVISIT: no Hana specific logic here (replacing T with space)
const _convertToDateString = date => date.toISOString().replace('T', ' ')

const _getDateFromQueryOptions = (str, toValue) => {
  const match = str.match(/^date'(.+)'$/)

  // REVISIT: What happens with invalid date values in query parameter?
  return new Date(match[1])
}

const _getTimeDelta = target => {
  if (!target) return 1000

  if (Object.values(target.elements).some(el => el['@cds.valid.from'] && el.type === 'cds.Date')) {
    return 1000 * 60 * 60 * 24
  } else {
    return 1000
  }
}

/**
 * Generic handler for entities using temporal aspect
 *
 * @param req
 */
const _handler = function (req) {
  // REVISIT: public API for query options
  const { _queryOptions } = req

  // REVISIT: stable access
  const _ = (req.context && req.context._) || req._

  if (
    !cds._deprecationWarningForTemporal &&
    _queryOptions &&
    (_queryOptions['sap-valid-from'] || _queryOptions['sap-valid-to'])
  ) {
    LOG._warn && LOG.warn('query options "sap-valid-from" and "sap-valid-to" are deprecated and will be removed.')
    cds._deprecationWarningForTemporal = true
  }

  if (
    !_queryOptions ||
    (!_queryOptions['sap-valid-at'] && !_queryOptions['sap-valid-to'] && !_queryOptions['sap-valid-from'])
  ) {
    const date = new Date()
    _['VALID-FROM'] = _convertToDateString(date)
    // REVISIT: Why do we add a second?
    date.setTime(date.getTime() + _getTimeDelta(req.target))
    _['VALID-TO'] = _convertToDateString(date)
  } else if (_queryOptions['sap-valid-at']) {
    const date = _getDateFromQueryOptions(_queryOptions['sap-valid-at'])
    _['VALID-FROM'] = _convertToDateString(date)
    date.setTime(date.getTime() + _getTimeDelta(req.target))
    _['VALID-TO'] = _convertToDateString(date)
  } else if (_queryOptions['sap-valid-from']) {
    _['VALID-FROM'] = _convertToDateString(_getDateFromQueryOptions(_queryOptions['sap-valid-from']))

    let toDate
    if (_queryOptions['sap-valid-to']) {
      toDate = _getDateFromQueryOptions(_queryOptions['sap-valid-to'])
    }

    _['VALID-TO'] = _convertToDateString(toDate || new Date('9999-01-01T00:00:00.000Z'))
  }
}

/*
 * handler registration
 */
module.exports = function () {
  _handler._initial = true
  // always run to allow interaction with temporal data in custom handlers
  this.before('*', _handler)
}
